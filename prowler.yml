AWSTemplateFormatVersion: 2010-09-09

Parameters:
  EcsClusterName:
    Type: String
    Description: The name of the cluster to use

  ScheduleRate:
    Type: String
    Description: The scheduler expression can be cron or rate. This determines how often to run the task.
    Default: rate(7 days)

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Choose which subnets the task will use

  VpcID:
    Type: AWS::EC2::VPC::Id
    Description: The name of the VPC you wish to use with the task
  
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "ECS & Networking Configuration"
        Parameters: 
          - EcsClusterName
          - VpcID
          - Subnets
      - 
        Label: 
          default: "Application Configuration"
        Parameters: 
          - ScheduleRate

Resources:
  ProwlerReporting:
    Type: AWS::ECS::TaskDefinition
    Properties: 
      ContainerDefinitions: 
        -
          Essential: True
          Image: "toniblyx/prowler"
          LogConfiguration: 
              LogDriver: awslogs
              Options: 
                awslogs-group : !Ref ECSLogGroup
                awslogs-region : !Ref "AWS::Region"
                awslogs-stream-prefix : ecs
          MemoryReservation: 128
          Name: security_hub_prowler
      Cpu: 256
      ExecutionRoleArn: !Ref ExecutionRole
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities: 
        - FARGATE
      TaskRoleArn: !Ref TaskRole

  ProwlerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: SG for Prowler
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      VpcId: !Ref VpcID

  TaskSchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "events.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: !Sub "task_scheduler_iam_policy_${AWS::StackName}"
          PolicyDocument:
            Statement:
              - Effect: "Allow"
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt ExecutionRole.Arn
                  - !GetAtt TaskRole.Arn
        - PolicyName: !Sub "task_scheduler_ecs_policy_${AWS::StackName}"
          PolicyDocument:
            Statement:
                - Effect: "Allow"
                  Action:
                    - ecs:RunTask
                    - ecs:StartTask
                  Resource:
                    - !Ref ProwlerReporting

  TaskRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:         
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ecs-tasks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/SecurityAudit
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess
      Path: /
      Policies: 
        - PolicyName: !Sub allow_access_to_security_hub_${AWS::StackName}
          PolicyDocument: 
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - securityhub:BatchImportFindings
                  - securityhub:GetFindings

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:         
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ecs-tasks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Sub /ecs/${AWS::StackName}
      RetentionInDays: 60

Outputs:
  EcsClusterArnOutput:
    Value: !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${EcsClusterName}
    Export:
      Name: ProwlerEcsClusterArn

  ScheduleRateOutput:
    Value: !Ref ScheduleRate
    Export:
      Name: ProwlerScheduleRate
  
  ProwlerSecurityGroupOutput:
    Value: !Ref ProwlerSecurityGroup
    Export:
      Name: ProwlerSecurityGroup

  ProwlerTaskDefinitionArnOutput:
    Value: !Ref ProwlerReporting
    Export:
      Name: ProwlerTaskDefinitionArn

  SubnetsOutput:
    Value: !Join
      - ','
      - !Ref Subnets
    Export:
      Name: ProwlerSubnets

  TaskSchedulerRoleArnOutput:
    Value: !GetAtt TaskSchedulerRole.Arn
    Export:
      Name: ProwlerTaskSchedulerRoleArn
